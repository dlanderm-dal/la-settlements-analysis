knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rio)
library(lubridate)
payouts<-rio::import('/Users/davidlanderman/UMD Drive/Github/reverse engineering/la-settlements-analysis/input/payouts.xlsx', skip=1, header=TRUE)
#skip/delete the wonky top row, make the second row into headers
payouts<-payouts %>%
#the bottom two rows are a space and then a grand total, this will screw up the data. Slice_head means filtering by that number of rows, I tried to use slice_tail(n=2) but it gave me JUST the bottom two rows, so I did total rows minus 2 and slice_head.
slice_head(n=18701)
View(payouts)
View(payouts)
payouts<-rio::import('/Users/davidlanderman/UMD Drive/Github/reverse engineering/la-settlements-analysis/input/payouts.xlsx', skip=1, header=TRUE)
#skip/delete the wonky top row, make the second row into headers
payouts<-payouts %>%
#the bottom two rows are a space and then a grand total, this will screw up the data. Slice_head means filtering by that number of rows, I tried to use slice_tail(n=2) but it gave me JUST the bottom two rows, so I did total rows minus 2 and slice_head.
slice_head(n=18701) %>%
clean_names()
View(payouts)
library(tidyverse)
library(rio)
library(lubridate)
library(janitor)
payouts<-rio::import('/Users/davidlanderman/UMD Drive/Github/reverse engineering/la-settlements-analysis/input/payouts.xlsx', skip=1, header=TRUE)
#skip/delete the wonky top row, make the second row into headers
payouts<-payouts %>%
#the bottom two rows are a space and then a grand total, this will screw up the data. Slice_head means filtering by that number of rows, I tried to use slice_tail(n=2) but it gave me JUST the bottom two rows, so I did total rows minus 2 and slice_head.
slice_head(n=18701) %>%
clean_names()
View(payouts)
payouts %>%
group_by(fiscal_year) %>%
summarize(
number_of_cases=n(),
total_for_year=sum(amount,na.rm=TRUE),
average_payout=average(amount,na.rm=TRUE),
number_of_cases_over_one_million=n(filter(amount>=1000000))
)
payouts %>%
group_by(fiscal_year) %>%
summarize(
number_of_cases=n(),
total_for_year=sum(amount,na.rm=TRUE),
average_payout=mean(amount,na.rm=TRUE),
number_of_cases_over_one_million=n(filter(amount>=1000000))
)
payouts %>%
group_by(fiscal_year) %>%
summarize(
number_of_cases_in_each_year=n(),
total_for_year=sum(amount,na.rm=TRUE),
average_payout=mean(amount,na.rm=TRUE),
#then filter the rows in the source table to rows with the amount column has a value over 1 million then count how many rows each fiscal_year value has that meet that condition for a column in the pivot table
number_of_cases_over_one_million=sum(amount >= 1000000,na.rm=TRUE)
)
payout_trends_summary<-payouts %>%
group_by(fiscal_year) %>%
summarize(
number_of_cases_in_each_year=n(),
total_for_year=sum(amount,na.rm=TRUE),
average_payout=mean(amount,na.rm=TRUE),
#then filter the rows in the source table to rows with the amount column has a value over 1 million then count how many rows each fiscal_year value has that meet that condition for a column in the pivot table
number_of_cases_over_one_million=sum(amount >= 1000000,na.rm=TRUE)
)
View(payout_trends_summary)
payout_trends_summary %>%
select(fiscal_year,number_of_cases_in_each_year)
payout_trends_summary %>%
select(fiscal_year,number_of_cases_in_each_year) %>%
mutate(difference_from_baseline=number_of_cases_in_each_year-number_of_cases_in_each_year[fiscal_year=2006])
payout_trends_summary %>%
select(fiscal_year,number_of_cases_in_each_year) %>%
mutate(difference_from_baseline=number_of_cases_in_each_year-payout_trends_summary[fiscal_year=2006,number_of_cases_in_each_year)
payout_trends_summary %>%
mutate(difference_from_baseline=number_of_cases_in_each_year-number_of_cases_in_each_year[fiscal_year=2006]) %>%
select(fiscal_year,number_of_cases_in_each_year,difference_from_baseline)
#SEE AI DISCLOSURE 2.2 for troubleshooting of the following line only (if I am using AI to troubleshoot too much please let me know, for the record I am attempting, then googling, then if I cant find/understand what I've found I go to CLAUDE)
payout_trends_summary %>%
#SEE AI DISCLOSURE 2.2 for troubleshooting of the following line only (if I am using AI to troubleshoot too much please let me know, for the record I am attempting, then googling, then if I cant find/understand what I've found I go to CLAUDE)
mutate(difference_from_baseline=number_of_cases_in_each_year-number_of_cases_in_each_year[fiscal_year==2006]) %>%
select(fiscal_year,number_of_cases_in_each_year,difference_from_baseline)
payout_trends_summary %>%
#SEE AI DISCLOSURE 2.2 for troubleshooting of the following line only (if I am using AI to troubleshoot too much please let me know, for the record I am attempting, then googling, then if I cant find/understand what I've found I go to CLAUDE)
mutate(difference_from_baseline=number_of_cases_in_each_year-first(number_of_cases_in_each_year) %>%
select(fiscal_year,number_of_cases_in_each_year,difference_from_baseline)
payout_trends_summary %>%
#SEE AI DISCLOSURE 2.2 for troubleshooting of the following line only (if I am using AI to troubleshoot too much please let me know, for the record I am attempting, then googling, then if I cant find/understand what I've found I go to CLAUDE)
mutate(difference_from_baseline=number_of_cases_in_each_year-first(number_of_cases_in_each_year)) %>%
select(fiscal_year,number_of_cases_in_each_year,difference_from_baseline)
payout_trends_summary %>%
#SEE AI DISCLOSURE 2.2 for troubleshooting of the following line only (if I am using AI to troubleshoot too much please let me know, for the record I am attempting, then googling, then if I cant find/understand what I've found I go to CLAUDE)
mutate(pct_change=((number_of_cases_in_each_year-first(number_of_cases_in_each_year))/first(number_of_cases_in_each_year))) %>%
select(fiscal_year,number_of_cases_in_each_year,pct_change)
payout_trends_summary %>%
#SEE AI DISCLOSURE 2.2 for troubleshooting of the following line only (if I am using AI to troubleshoot too much please let me know, for the record I am attempting, then googling, then if I cant find/understand what I've found I go to CLAUDE)
mutate(pct_change=((number_of_cases_in_each_year-first(number_of_cases_in_each_year))/first(number_of_cases_in_each_year))*100) %>%
select(fiscal_year,number_of_cases_in_each_year,pct_change)
payout_trends_summary %>%
#SEE AI DISCLOSURE 2.2 for troubleshooting of the following line only (if I am using AI to troubleshoot too much please let me know, for the record I am attempting, then googling, then if I cant find/understand what I've found I go to CLAUDE)
mutate(pct_change=((number_of_cases_in_each_year-first(number_of_cases_in_each_year))/first(number_of_cases_in_each_year))*100) %>%
mutate(difference_from_baseline=(number_of_cases_in_each_year-first(number_of_cases_in_each_year))
select(fiscal_year,number_of_cases_in_each_year,difference_from_baseline,pct_change)
payout_trends_summary %>%
#SEE AI DISCLOSURE 2.2 for troubleshooting of the following line only (if I am using AI to troubleshoot too much please let me know, for the record I am attempting, then googling, then if I cant find/understand what I've found I go to CLAUDE)
mutate(pct_change=((number_of_cases_in_each_year-first(number_of_cases_in_each_year))/first(number_of_cases_in_each_year))*100) %>%
mutate(difference_from_baseline=(number_of_cases_in_each_year-first(number_of_cases_in_each_year))%>%
select(fiscal_year,number_of_cases_in_each_year,difference_from_baseline,pct_change)
payout_trends_summary %>%
#SEE AI DISCLOSURE 2.2 for troubleshooting of the following line only (if I am using AI to troubleshoot too much please let me know, for the record I am attempting, then googling, then if I cant find/understand what I've found I go to CLAUDE)
mutate(pct_change=((number_of_cases_in_each_year-first(number_of_cases_in_each_year))/first(number_of_cases_in_each_year))*100) %>%
mutate(difference_from_baseline=(number_of_cases_in_each_year-first(number_of_cases_in_each_year))%>%
select(fiscal_year,number_of_cases_in_each_year,difference_from_baseline,pct_change)
payout_trends_summary %>%
#SEE AI DISCLOSURE 2.2 for troubleshooting of the following line only (if I am using AI to troubleshoot too much please let me know, for the record I am attempting, then googling, then if I cant find/understand what I've found I go to CLAUDE)
mutate(pct_change=((number_of_cases_in_each_year-first(number_of_cases_in_each_year))/first(number_of_cases_in_each_year))*100) %>%
mutate(difference_from_baseline=(number_of_cases_in_each_year-first(number_of_cases_in_each_year)))%>%
select(fiscal_year,number_of_cases_in_each_year,difference_from_baseline,pct_change)
payout_trends_summary %>%
mutate(pct_change=((average_payout-first(average_payout))/first(average_payout))*100) %>%
mutate(difference_from_baseline=(average_payout-first(average_payout)))%>%
select(fiscal_year,average_payout,difference_from_baseline,pct_change)
payout_trends_summary %>%
filter(fiscal_year==2017) %>%
select(fiscal_year,number_of_cases_over_one_million)
payout_trends_summary %>%
filter(fiscal_year==2017|2007) %>%
select(fiscal_year,number_of_cases_over_one_million)
payout_trends_summary %>%
filter(fiscal_year=2017|2007) %>%
select(fiscal_year,number_of_cases_over_one_million)
payout_trends_summary %>%
filter(fiscal_year==2007) %>%
select(fiscal_year,number_of_cases_over_one_million)
payout_trends_summary %>%
filter(fiscal_year==2007|fiscal_year==2017) %>%
select(fiscal_year,number_of_cases_over_one_million)
payout_trends_summary %>%
filter(fiscal_year==2007|fiscal_year==2017) %>%
mutate(multiplier=number_of_cases_over_one_million/first(number_of_cases_over_one_million))
select(fiscal_year,number_of_cases_over_one_million,multiplier)
payout_trends_summary %>%
filter(fiscal_year==2007|fiscal_year==2017) %>%
mutate(multiplier=number_of_cases_over_one_million/first(number_of_cases_over_one_million)) %>%
select(fiscal_year,number_of_cases_over_one_million,multiplier)
payout_trends_summary %>%
filter(fiscal_year==2007|fiscal_year==2017) %>%
mutate(decade_change_multiplier=number_of_cases_over_one_million/first(number_of_cases_over_one_million)) %>%
select(fiscal_year,number_of_cases_over_one_million,decade_change_multiplier)
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)
library(rio)
library(lubridate)
library(janitor)
# borrowed from David's code
payouts <- rio::import('/Users/davidlanderman/UMD Drive/Github/reverse engineering/la-settlements-analysis/input/payouts.xlsx',
skip=1, header=TRUE)
#The above skip/header functions deletes the wonky top row, make the second row into headers
payouts <- payouts %>%
slice_head(n=18701) %>%
clean_names()
#the bottom two rows in the csv are one blank row and then a row with a grand total, this will screw up the data. Slice_head means filtering by that number of rows, I tried to use slice_tail(n=2) but it gave me JUST the bottom two rows, so I did total rows minus 2 and slice_head.
##Note to RW
# Load department totals for comparison
dept_totals <- rio::import('/Users/zakahossain/Documents/GitHub/JOUR772-0301/LA Settlements/la-settlements-analysis/output/department-totals.csv')
# borrowed from David's code
payouts <- rio::import('/Users/davidlanderman/UMD Drive/Github/reverse engineering/la-settlements-analysis/input/payouts.xlsx',
skip=1, header=TRUE)
#The above skip/header functions deletes the wonky top row, make the second row into headers
payouts <- payouts %>%
slice_head(n=18701) %>%
clean_names()
#the bottom two rows in the csv are one blank row and then a row with a grand total, this will screw up the data. Slice_head means filtering by that number of rows, I tried to use slice_tail(n=2) but it gave me JUST the bottom two rows, so I did total rows minus 2 and slice_head.
##Note to RW
# Load department totals for comparison
dept_totals <- rio::import('/Users/davidlanderman/UMD Drive/Github/reverse engineering/la-settlements-analysis/output/department-totals.csv')
yearly_data_sum <- payouts %>%
group_by(fiscal_year) %>%
summarise(
total_cases = n(),
total_amount = sum(amount, na.rm = TRUE)
) %>%
arrange(fiscal_year)
# Check 2017 total (last budget year when article was published in 2018)
yearly_data_sum %>%
filter(fiscal_year == 2017)
# Filter for PUBLIC WORKS and LIBRARY departments
comparison_depts <- dept_totals %>%
filter(str_detect(latimes_department, 'PUBLIC WORKS|LIBRARY')) %>%
arrange(desc(amount))
comparison_depts
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)
library(rio)
library(lubridate)
library(janitor)
# borrowed from David's code
payouts <- rio::import('/Users/davidlanderman/UMD Drive/Github/reverse engineering/la-settlements-analysis/input/payouts.xlsx',
skip=1, header=TRUE)
#The above skip/header functions deletes the wonky top row, make the second row into headers
payouts <- payouts %>%
slice_head(n=18701) %>%
clean_names()
#the bottom two rows in the csv are one blank row and then a row with a grand total, this will screw up the data. Slice_head means filtering by that number of rows, I tried to use slice_tail(n=2) but it gave me JUST the bottom two rows, so I did total rows minus 2 and slice_head.
##Note to RW
# Load department totals for comparison
dept_totals <- rio::import('/Users/davidlanderman/UMD Drive/Github/reverse engineering/la-settlements-analysis/output/department-totals.csv')
yearly_data_sum <- payouts %>%
group_by(fiscal_year) %>%
summarise(
total_cases = n(),
total_amount = sum(amount, na.rm = TRUE)
) %>%
arrange(fiscal_year)
# Check 2017 total (last budget year when article was published in 2018)
yearly_data_sum %>%
filter(fiscal_year == 2017)
# Filter for PUBLIC WORKS and LIBRARY departments
comparison_depts <- dept_totals %>%
filter(str_detect(latimes_department, 'PUBLIC WORKS|LIBRARY')) %>%
arrange(desc(amount))
comparison_depts
payout_trends_summary <- payouts %>%
group_by(fiscal_year) %>%
summarize(
number_of_cases_in_each_year = n(),
total_for_year = sum(amount, na.rm=TRUE),
average_payout = mean(amount, na.rm=TRUE),
#then filter the rows in the source table to rows with the amount column has a value over 1 million then count how many rows each fiscal_year value has that meet that condition for a column in the pivot table *SEE AI DISCLOSURE 2.1, for troubleshooting of the following line*
number_of_cases_over_one_million = sum(amount >= 1000000, na.rm=TRUE)
)
payout_trends_summary %>%
#SEE AI DISCLOSURE 2.2 for troubleshooting of the following line only (if I am using AI to troubleshoot too much please let me know, for the record I am attempting, then googling, then if I cant find/understand what I've found I go to CLAUDE)
mutate(
pct_change = ((number_of_cases_in_each_year - first(number_of_cases_in_each_year))/
first(number_of_cases_in_each_year)) * 100,
difference_from_baseline = number_of_cases_in_each_year - first(number_of_cases_in_each_year)
) %>%
select(fiscal_year, number_of_cases_in_each_year, difference_from_baseline, pct_change)
#DL to RW question: trends difference from article suggest missing data cleaning step, search "DATA CLEANING INVESTIGATION" in this code for what I'd like your thoughts on
payout_trends_summary %>%
mutate(
pct_change = ((average_payout - first(average_payout))/first(average_payout)) * 100,
difference_from_baseline = average_payout - first(average_payout)
) %>%
select(fiscal_year, average_payout, difference_from_baseline, pct_change)
payout_trends_summary %>%
filter(fiscal_year == 2017) %>%
select(fiscal_year, number_of_cases_over_one_million)
payout_trends_summary %>%
filter(fiscal_year == 2007 | fiscal_year == 2017) %>%
mutate(decade_change_multiplier = number_of_cases_over_one_million/
first(number_of_cases_over_one_million)) %>%
select(fiscal_year, number_of_cases_over_one_million, decade_change_multiplier)
yearly_data_sum <- payouts %>%
group_by(fiscal_year) %>%
summarise(
total_cases = n(),
total_amount = sum(amount, na.rm = TRUE)
) %>%
arrange(fiscal_year)
# Check 2017 total (last budget year when article was published in 2018)
yearly_data_sum %>%
filter(fiscal_year == 2017)
View(yearly_data_sum)
yearly_data_sum <- payouts %>%
group_by(fiscal_year) %>%
summarise(
total_cases = n(),
total_amount = sum(amount, na.rm = TRUE)
) %>%
arrange(fiscal_year)
# Check 2017 total (last budget year when article was published in 2018)
yearly_data_sum %>%
filter(fiscal_year == 2017)
View(yearly_data_sum)
payout_trends_summary <- payouts %>%
group_by(fiscal_year) %>%
summarize(
number_of_cases_in_each_year = n(),
total_for_year = sum(amount, na.rm=TRUE),
average_payout = mean(amount, na.rm=TRUE),
#then filter the rows in the source table to rows with the amount column has a value over 1 million then count how many rows each fiscal_year value has that meet that condition for a column in the pivot table *SEE AI DISCLOSURE 2.1, for troubleshooting of the following line*
number_of_cases_over_one_million = sum(amount >= 1000000, na.rm=TRUE)
)
View(payout_trends_summary)
payout_trends_summary %>%
#SEE AI DISCLOSURE 2.2 for troubleshooting of the following line only (if I am using AI to troubleshoot too much please let me know, for the record I am attempting, then googling, then if I cant find/understand what I've found I go to CLAUDE)
mutate(
pct_change = ((number_of_cases_in_each_year - first(number_of_cases_in_each_year))/
first(number_of_cases_in_each_year)) * 100,
difference_from_baseline = number_of_cases_in_each_year - first(number_of_cases_in_each_year)
) %>%
select(fiscal_year, number_of_cases_in_each_year, difference_from_baseline, pct_change)
#DL to RW question: trends difference from article suggest missing data cleaning step, search "DATA CLEANING INVESTIGATION" in this code for what I'd like your thoughts on
payout_trends_summary %>%
mutate(
pct_change = ((average_payout - first(average_payout))/first(average_payout)) * 100,
difference_from_baseline = average_payout - first(average_payout)
) %>%
select(fiscal_year, average_payout, difference_from_baseline, pct_change)
payout_trends_summary %>%
filter(fiscal_year == 2017) %>%
select(fiscal_year, number_of_cases_over_one_million)
payout_trends_summary %>%
filter(fiscal_year == 2007 | fiscal_year == 2017) %>%
mutate(decade_change_multiplier = number_of_cases_over_one_million/
first(number_of_cases_over_one_million)) %>%
select(fiscal_year, number_of_cases_over_one_million, decade_change_multiplier)
